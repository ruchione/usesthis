---
title: Daniel Jalkut
summary: Software developer (MarsEdit, FastScripts), podcaster
categories:
- developer
- mac
- podcaster
- software
---

#### Who are you, and what do you do?

I'm Daniel Jalkut. I grew up in California, started my career at Apple, quit to earn a 2nd BA in Music, and finally settled in to founding and running [Red Sweater Software](http://www.red-sweater.com/ "Red Sweater's website.").

I'm active in the Mac and iOS developer community, where I have gotten to know folks through public speaking, blogging on my [company blog](http://www.red-sweater.com/blog/ "Red Sweater's weblog.") and [personal tech blog](http://bitsplitting.org/ "Daniel's weblog."), and through podcasting with my friend Manton Reece on [Core Intuition](http://coreint.org/ "Daniel and Manton's podcast."). I recently started an interview podcast: the [Bitsplitting Podcast](http://bitsplitting.org/podcast/ "The Bitsplitting podcast site.").

#### What hardware do you use?

I work from home, so all the hardware I use to run the business doubles in some capacity as a personal computer as well. My main work machine is a 2010-era 15" [MacBook Pro][macbook-pro], which I imagine will eventually be upgraded to a rough equivalent in the Retina MacBook Pro line. I used to keep a humongous [Mac Pro][mac-pro] in my office but as the power of portable computers has increased I find the benefits of having one "home computer" that goes everywhere you do outweigh the minor performance losses compared to a behemoth workhorse.

The only downside to basing everything off a portable computer is the lid must sometimes be closed, and the computer goes to sleep. There are some computing tasks I want to keep going at all time, so I keep a second home computer running to augment my main Mac's powers. The [Mac Mini][mac-mini] is charged with hosting my MacBook's backups, running [continuous integration](http://en.wikipedia.org/wiki/Continuous_integration "The Wikipedia entry for Continuous Integration.") for my software projects, and other stuff such as [passively filtering spam][spamsieve] on my email accounts, and serving as our home's media server for digital audio and video.

When I used to sit all the time I was a huge fan of [Aeron chairs][aeron]. I love the absence of a cushion because it feels, and probably is, so much more hygienic. They are also relatively indestructible but incredibly well warrantied: I bought one in San Francisco in 2000 or so and after thousands of hours of use caused a piece of the seat to break off in Boston in 2006, Herman Miller sent me a new chair for free.

This past year I have tipped my toes into the standing-desk revolution. I bought a [GeekDesk][] frame and bought a $100 IKEA counter-top. Now I can stand while I work, but occasionally flip the motorized switch on the desk and relax back into my trusty Aeron for some chair-time.

I have been gradually shifting to a paperless lifestyle and for this my [Fujitsu ScanSnap S1500M][scansnap-s1500m] has been a great help. Other hardware at my desk supports my podcasting, including a classic MOTU 828 audio interface with a [Shure SM58][sm58] microphone. I've recently standardized with my podcasting cohort on a new mic: the [RÃ¸de Podcaster][podcaster].

#### And what software?

As a software developer, some of my most beloved apps are the ones I wrote myself. I'm constantly using [MarsEdit][] to draft and publish blog entries, and [FastScripts][] to shave seconds or minutes off the repetitive tasks that are part of my work day.

I spend most of my development time in Apple's programming IDE, [Xcode][], but I also spend a considerable amount of time handling customer support in [Safari][], my web browser of choice. Not only do I use Safari for web browsing, but also for handling customer support with [FogBugz][]. I also spend time in Safari on my company forums, which are powered with [Vanilla][].

For text editing that is not specifically related to programming the Mac and iOS, I rely heavily upon [BBEdit][], where I do most of my [Python][], HTML, [JavaScript][] and [PHP][] editing. These are the primary languages I use for the development of my company web site.

I use [OmniFocus][] on both my Mac and [iOS][omnifocus-ios] to keep my To-Do lists in check. I mentioned FastScripts for running quick scripts, but I also use [TextExpander][] extensively, particularly for accelerating responses to customer support email. All my customer support goes through FogBugz on the web, but for personal mail I have stuck with Apple's [Mail.app][mail] and the aforementioned SpamSieve.

To keep in touch with folks on Twitter, I use [Tweetbot][] on my Mac, and [Twitterrific][twitterrific-ios] on my iPhone. I've gotten involved with the [App.net][] social network, and primarily use [Kiwi][] on my Mac to communicate there. To subscribe and read blogs I use [NetNewsWire][] as the primary input stream, and send longer content to [Instapaper][] for easier reading on-the-go or from my iPad.

For podcasting I use [Audio Hijack Pro][audio-hijack-pro] with [Skype][] for recording audio, and edit the Bitsplitting podcast in [Logic Pro][logic-pro]. The podcast home pages are both hosted using [WordPress][], and I use the Seriously Simple Podcasting plugin for Bitsplitting's feed and audio player.

What else? [Acorn][] for casual image editing, [Skitch][] (1.0 forever!) for easy screen captures, [Rdio][] for infinite music, and backups courtesy of [Backblaze][], [Time Machine][time-machine] and [SuperDuper!][superduper].

#### What would be your dream setup?

I would welcome anything that allowed me to approach all my computing with a more centralized concept of "home base." The advantages of a portable Mac with a fast SSD drive are offset by the challenges of a small disk and, as I mentioned, the system sometimes being put to sleep or shut down. I am intrigued by the extent to which some solutions are syncing seamlessly across not only multiple Macs but to iOS devices as well. In the long term, I expect to be able to use whatever device is convenient for the task at hand, confident that the data will end up where it needs to be. For example, if I take a thousand pictures on my phone, it should not be a big deal to be assured those photos have been archived on my home computer and will be redundantly backed up within the hour. Currently there are ways of automating this kind of stuff, but they require up-front investment and research in to the best solutions.

Apart from minor quibbles about the first-world problem of having too many devices, I don't have many complaints. I'm happy with my setup the way it is now!